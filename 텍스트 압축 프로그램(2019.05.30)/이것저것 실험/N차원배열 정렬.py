#다차원 배열 정렬
# index 2 의 (n)은 n차원  
my_list = [ [64,'f',(2)],
            [ [52,'a',(3)], [48,'b',(3)] ],
            [ [10,'eb',(3)],[0,'aaa',(3)], [0,'tttt',(3)] ],
            [ [ [1,'4',(4)], [2,'4',(4)] ],[5,'3',(3)] ],
            [58,'1',(1)]
        ]

#my_list.sort()    #차원이 서로 다르면 sort 안됨

my_list = [ [ [10,'eb',(3)],[10,'aaa',(3)], [0,'tttt',(3)] ],
            [ [52,'a',(3)], [48,'b',(3)] ],
            [ [10,'eb',(3)],[0,'aaa',(3)], [0,'tttt',(3)] ],
            [ [15,'eff',(3)],[0,'aaa',(3)], [0,'tttt',(3)] ],
        ]

my_list.sort() #차원이 같으면 sort 가능


# 결과 - 길이순으로 역정렬 
'''
[[[10, 'eb', 3], [0, 'aaa', 3], [0, 'tttt', 3]],
 [[10, 'eb', 3], [10, 'aaa', 3], [0, 'tttt', 3]],
 [[15, 'eff', 3], [0, 'aaa', 3], [0, 'tttt', 3]],
 [[52, 'a', 3], [48, 'b', 3]]
]
'''

my_list.sort(reverse=True)

#결과 - 길이순으로 정렬  
'''
[[[52, 'a', 3], [48, 'b', 3]],
 [[15, 'eff', 3], [0, 'aaa', 3], [0, 'tttt', 3]],
 [[10, 'eb', 3], [10, 'aaa', 3], [0, 'tttt', 3]],
 [[10, 'eb', 3], [0, 'aaa', 3], [0, 'tttt', 3]]       --- 배열안에서 정렬안됨
                                                      --- 배열안에서 정렬하려면
                                                     ---my_list[idx].sort 해야함
]
'''




